{"version":3,"sources":["pages/BookTruck.js"],"names":["BookTruck","topCities","theme","createTheme","typography","fontFamily","join","React","useState","pickUpLocation","setPickUpLocation","destinationLocation","setDestinationLocation","selectVehicle","setSelectVehicle","goodsSelectType","setGoodsSelectType","goodsWeight","setGoodsWeight","Distance","setDistance","price","setPrice","info","setInfo","pickUp","useRef","destination","GoodsType","vehicle","Weight","distance","Rate","setRate","Capacity","setCapacity","dispatch","useDispatch","useSelector","state","vehicleType","isLoading","goods","goodsType","isLoadingG","data","order","navigate","useNavigate","useEffect","current","value","rate","capacity","fetchVehicles","getVehicle","fetchGoods","getGoods","div","initial","opacity","scale","animate","transition","duration","sx","backgroundColor","mt","pt","x","type","variant","textAlign","color","style","padding","component","noValidate","onSubmit","e","preventDefault","FormData","currentTarget","newData","get","includes","orderAction","addOrder","localStorage","setItem","JSON","stringify","spacing","width","lg","xs","marginRight","fontSize","freeSolo","id","disableClearable","options","defaultValue","renderInput","params","ref","name","label","InputProps","onChange","target","onSelect","severity","display","map","option","index","onClick","console","log","newRate","v","initialPrice","filter","r","newCapacity","cap","disabled","good","placeholder","className","src","title","border","paddingTop","direction","marginLeft"],"mappings":"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","file":"static/js/8.18e53e0f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../component/Navbar\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getVehicle } from \"../store/vehicleReducer\";\r\nimport { getGoods } from \"../store/goodsReducer\";\r\nimport { orderAction } from \"../store/orderReducer\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport \"./BookTruck.css\";\r\n\r\n// mui imports\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { createTheme } from \"@mui/material\";\r\nimport { Typography } from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\nimport BasicFooter from \"../component/BasicFooter\";\r\n\r\n// google maps api to use maps services\r\n// it will provide use with a varible called is loaded\r\n// import { useJsApiLoader, GoogleMap } from \"@react-google-maps/api\";\r\n\r\nfunction BookTruck() {\r\n  const topCities = [\r\n    \"Surat\",\r\n    \"Ahmedabad\",\r\n    \"Chennai\",\r\n    \"Delhi\",\r\n    \"Rajasthan\",\r\n    \"Banglore\",\r\n    \"Pujab\",\r\n    \"Kolkata\",\r\n    \"Hyderabad\",\r\n    \"Mumbai\",\r\n  ];\r\n\r\n  const theme = createTheme({\r\n    typography: {\r\n      fontFamily: [\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Segoe UI\"',\r\n        \"Roboto\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n    },\r\n  });\r\n  // not working code\r\n  // React.useEffect(() => {\r\n  //   const fetchToken = async () => {\r\n  //     try {\r\n  //       const response = await axios(\r\n  //         \"https://outpost.mapmyindia.com/api/security/oauth/token\",\r\n  //         {\r\n  //           method: \"POST\",\r\n  //           headers: {\r\n  //             \"Access-Control-Allow-Origin\": \"strict-origin-when-cross-origin\",\r\n  //             \"Access-Control-Allow-Methods\":\r\n  //               \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n  //           },\r\n  //         },\r\n  //         {\r\n  //           grant_type: \"client_credentials\",\r\n  //           client_id:\r\n  //             \"33OkryzDZsI3GQlduBa_4EehHaoznij96uYsGt0effmeahsPDuZ8fAS54HLcZft1_61G6efczKnTCnxuLKLJ_w==\",\r\n  //           client_secret:\r\n  //             \"lrFxI-iSEg9ymoR2JUUawgwwLZH_gY2C6bosEf8JQFk5DubwIJRzXI-cIBREFWxvGl67xKoDyx-YmNuWMjtiFDTykPNfjtiQ\",\r\n  //         }\r\n  //       );\r\n\r\n  //       console.log(\"sdf\", response);\r\n  //     } catch (err) {\r\n  //       console.log(\"error\", err);\r\n  //     }\r\n  //   };\r\n  //   fetchToken();\r\n  // }, []);\r\n\r\n  // states for validations\r\n  const [pickUpLocation, setPickUpLocation] = React.useState(true);\r\n\r\n  const [destinationLocation, setDestinationLocation] = React.useState(true);\r\n  const [selectVehicle, setSelectVehicle] = React.useState(true);\r\n  const [goodsSelectType, setGoodsSelectType] = React.useState(true);\r\n  const [goodsWeight, setGoodsWeight] = React.useState(true);\r\n  const [Distance, setDistance] = React.useState(true);\r\n  const [price, setPrice] = React.useState(null);\r\n  const [info, setInfo] = React.useState(true);\r\n\r\n  // refs to store value\r\n  const pickUp = React.useRef(null);\r\n  const destination = React.useRef(null);\r\n  const GoodsType = React.useRef(null);\r\n  const vehicle = React.useRef(null);\r\n  const Weight = React.useRef(null);\r\n  const distance = React.useRef(null);\r\n\r\n  const [Rate, setRate] = React.useState();\r\n  const [Capacity, setCapacity] = React.useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { vehicleType, isLoading } = useSelector((state) => state.vehicle);\r\n  const { goodsType, isLoadingG } = useSelector((state) => state.goods);\r\n  const { data } = useSelector((state) => state.order);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  React.useEffect(() => {\r\n    pickUp.current.value = data.pickUp;\r\n    destination.current.value = data.destination;\r\n    vehicle.current.value = data.vehicle;\r\n    GoodsType.current.value = data.goodsType;\r\n    Weight.current.value = data.Weight;\r\n    distance.current.value = data.distance;\r\n    setRate(data.rate);\r\n    setCapacity(data.capacity);\r\n    setPrice(data.price);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // function to handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.currentTarget);\r\n\r\n    // to get data\r\n    const newData = {\r\n      pickUpLocation: data.get(\"pickUpLocation\"),\r\n      destinationLocation: data.get(\"destinationLocation\"),\r\n      selectVehicle: data.get(\"selectVehicle\"),\r\n      goodsSelectType: data.get(\"goodsSelectType\"),\r\n      goodsWeight: data.get(\"goodsWeight\"),\r\n      Distance: data.get(\"Distance\"),\r\n    };\r\n\r\n    // for validation purpose\r\n    if (!newData.pickUpLocation) {\r\n      setPickUpLocation(false);\r\n    }\r\n    if (!newData.destinationLocation) {\r\n      setDestinationLocation(false);\r\n    }\r\n    if (!newData.selectVehicle) {\r\n      setSelectVehicle(false);\r\n    }\r\n    if (!newData.goodsSelectType) {\r\n      setGoodsSelectType(false);\r\n    }\r\n    if (!newData.goodsWeight) {\r\n      setGoodsWeight(false);\r\n    }\r\n    if (!newData.Distance) {\r\n      setDistance(false);\r\n      setInfo(false);\r\n      return;\r\n    } else if (newData.Distance <= 0) {\r\n      setDistance(false);\r\n      setInfo(false);\r\n      return;\r\n    }\r\n    if (!topCities.includes(pickUp.current.value)) {\r\n      setPickUpLocation(false);\r\n    }\r\n    if (!topCities.includes(destination.current.value)) {\r\n      setDestinationLocation(false);\r\n      return;\r\n    } else {\r\n      setPickUpLocation(true);\r\n      setDestinationLocation(true);\r\n    }\r\n\r\n    // dispatching order\r\n    dispatch(\r\n      orderAction.addOrder({\r\n        pickUp: pickUp.current.value,\r\n        destination: destination.current.value,\r\n        goodsType: GoodsType.current.value,\r\n        vehicle: vehicle.current.value,\r\n        Weight: Weight.current.value,\r\n        distance: distance.current.value,\r\n        price: price,\r\n        capacity: Capacity,\r\n        rate: Rate,\r\n      })\r\n    );\r\n\r\n    //  setting order to localStorage\r\n    localStorage.setItem(\r\n      \"abdulOrder\",\r\n      JSON.stringify({\r\n        pickUp: pickUp.current.value,\r\n        destination: destination.current.value,\r\n        goodsType: GoodsType.current.value,\r\n        vehicle: vehicle.current.value,\r\n        Weight: Weight.current.value,\r\n        distance: distance.current.value,\r\n        price: price,\r\n      })\r\n    );\r\n    navigate(\"/user/checkout\");\r\n  };\r\n\r\n  // function to fetch vehicle and goods\r\n  const fetchVehicles = () => {\r\n    dispatch(getVehicle());\r\n  };\r\n  const fetchGoods = () => {\r\n    dispatch(getGoods());\r\n  };\r\n\r\n  // console.log(vehicleType);\r\n  // code to show gmaps\r\n  // const { isLoaded } = useJsApiLoader({\r\n  //   googleMapsApiKey: process.env.REACT_APP_GOOGLE_LOCATION_API,\r\n  // });\r\n\r\n  // const center = { lat: 48.8584, lng: 2.2945 };\r\n  // const [map, setMap] = React.useState(null);\r\n\r\n  // const onLoad = React.useCallback(function callback(map) {\r\n  //   const bounds = new window.google.maps.LatLngBounds(center);\r\n  //   map.fitBounds(bounds);\r\n  //   setMap(map);\r\n  // }, []);\r\n\r\n  // if (!isLoaded) {\r\n  //   return (\r\n  //     <Box sx={{ width: \"100%\" }}>\r\n  //       <LinearProgress />\r\n  //     </Box>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={{ opacity: 0, scale: 1 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        transition={{ duration: 1 }}\r\n      >\r\n        <Navbar />\r\n        <Box sx={{ backgroundColor: \"whitesmoke\", mt: -6, pt: 5 }}>\r\n          <ThemeProvider theme={theme}>\r\n            <motion.div\r\n              initial={{ x: -100 }}\r\n              animate={{ x: 0 }}\r\n              transition={{ type: \"tween\", duration: 1 }}\r\n            >\r\n              <Typography\r\n                variant=\"h3\"\r\n                sx={{\r\n                  textAlign: \"center\",\r\n                  color: \"black\",\r\n                  fontFamily: \"Roboto \",\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: \"white\",\r\n                    backgroundColor: \"#e00029\",\r\n                    padding: 5,\r\n                  }}\r\n                >\r\n                  Book\r\n                </span>{\" \"}\r\n                Vehicle\r\n              </Typography>\r\n            </motion.div>\r\n          </ThemeProvider>\r\n\r\n          <div>\r\n            <Box\r\n              component=\"form\"\r\n              noValidate\r\n              onSubmit={handleSubmit}\r\n              sx={{ mt: 3, textAlign: \"-webkit-center\" }}\r\n            >\r\n              <Stack spacing={2} sx={{ width: { lg: 1000, xs: 350 } }}>\r\n                {/* for pickup location */}\r\n\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  sx={{ marginRight: 120, fontSize: 15 }}\r\n                >\r\n                  PickUpLocation\r\n                </Typography>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  id=\"free-solo-2-demo\"\r\n                  disableClearable\r\n                  options={topCities}\r\n                  defaultValue={data.pickUp}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      ref={pickUp}\r\n                      {...params}\r\n                      name=\"pickUpLocation\"\r\n                      label=\"PickUp Location\"\r\n                      id=\"pickUpLocation\"\r\n                      defaultValue={data.pickUp}\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        type: \"search\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        pickUp.current.value = e.target.value;\r\n                        setPickUpLocation(true);\r\n                      }}\r\n                      onSelect={(e) => {\r\n                        setPickUpLocation(true);\r\n\r\n                        pickUp.current.value = e.target.value;\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                {!pickUpLocation && (\r\n                  <Alert severity=\"error\">Please Enter Correct Location!</Alert>\r\n                )}\r\n\r\n                {/* for destination location */}\r\n\r\n                <div>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{ marginRight: 120, fontSize: 15 }}\r\n                  >\r\n                    DestinationLocation\r\n                  </Typography>\r\n                </div>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  ref={destination}\r\n                  id=\"free-solo-2-demo\"\r\n                  disableClearable\r\n                  options={topCities}\r\n                  defaultValue={data.destination}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      name=\"destinationLocation\"\r\n                      label=\"Destination Location\"\r\n                      id=\"destinationLocation\"\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        type: \"search\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        destination.current.value = e.target.value;\r\n                      }}\r\n                      onSelect={(e) => {\r\n                        setDestinationLocation(true);\r\n                        destination.current.value = e.target.value;\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n                {!destinationLocation && (\r\n                  <Alert severity=\"error\">\r\n                    Please Enter Correct Destination\r\n                  </Alert>\r\n                )}\r\n\r\n                {/* to select vehicle */}\r\n                {isLoading && (\r\n                  <Box sx={{ display: \"flex\" }}>\r\n                    <CircularProgress />\r\n                  </Box>\r\n                )}\r\n                <div>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{ marginRight: 120, fontSize: 15 }}\r\n                  >\r\n                    SelectTruckType\r\n                  </Typography>\r\n                </div>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  ref={vehicle}\r\n                  id=\"free-solo-2-demo\"\r\n                  disableClearable\r\n                  options={vehicleType.map((option, index) => {\r\n                    return option.type;\r\n                  })}\r\n                  defaultValue={data.vehicle}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      name=\"selectVehicle\"\r\n                      label=\"Select Vehicle\"\r\n                      id=\"selectVehicle\"\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        type: \"search\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        vehicle.current.value = e.target.value;\r\n                      }}\r\n                      onClick={fetchVehicles}\r\n                      onSelect={(e) => {\r\n                        setSelectVehicle(true);\r\n                        vehicle.current.value = e.target.value;\r\n\r\n                        console.log(vehicle.current.value);\r\n\r\n                        // taking rate\r\n                        const rate = vehicleType?.map((v) => {\r\n                          return v.type === vehicle.current.value\r\n                            ? v.initialPrice\r\n                            : 0;\r\n                        });\r\n                        // console.log(\"reate\", rate);\r\n\r\n                        const newRate = rate.filter((r) => {\r\n                          if (r !== 0) {\r\n                            return r;\r\n                          }\r\n                        });\r\n\r\n                        setRate(newRate[0]);\r\n\r\n                        // getting capacity\r\n                        const capacity = vehicleType?.map((v) => {\r\n                          return v.type === vehicle.current.value\r\n                            ? v.capacity\r\n                            : 0;\r\n                        });\r\n                        console.log(\"====capacty\", capacity);\r\n\r\n                        const newCapacity = capacity.filter((cap) => {\r\n                          if (cap !== 0) {\r\n                            return cap;\r\n                          }\r\n                        });\r\n\r\n                        setCapacity(newCapacity[0]);\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n                {!selectVehicle && (\r\n                  <Alert severity=\"error\">\r\n                    Please select correct vehicle type!\r\n                  </Alert>\r\n                )}\r\n                {/* Capacity of vehicle */}\r\n                {Capacity && (\r\n                  <TextField\r\n                    name=\"Capacity\"\r\n                    id=\"Capacity\"\r\n                    label=\"Capacity in TON\"\r\n                    value={Capacity}\r\n                    disabled\r\n                  ></TextField>\r\n                )}\r\n                {/* Rate of vehicle */}\r\n                {Rate && (\r\n                  <TextField\r\n                    name=\"Rate\"\r\n                    id=\"Rate\"\r\n                    label=\"Rate Per KM\"\r\n                    value={Rate}\r\n                    disabled\r\n                  ></TextField>\r\n                )}\r\n\r\n                {/* to select goods */}\r\n                {isLoadingG && (\r\n                  <Box sx={{ display: \"flex\" }}>\r\n                    <CircularProgress />\r\n                  </Box>\r\n                )}\r\n                <div>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{ marginRight: 120, fontSize: 15 }}\r\n                  >\r\n                    SelectGoodsType\r\n                  </Typography>\r\n                </div>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  ref={GoodsType}\r\n                  id=\"free-solo-2-demo\"\r\n                  disableClearable\r\n                  options={goodsType.map((good) => {\r\n                    return good.type;\r\n                  })}\r\n                  defaultValue={data.goodsType}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      name=\"goodsSelectType\"\r\n                      label=\"select Goods Type\"\r\n                      id=\"goodsSelectType\"\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        type: \"search\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        GoodsType.current.value = e.target.value;\r\n                      }}\r\n                      onClick={fetchGoods}\r\n                      onSelect={(e) => {\r\n                        setGoodsSelectType(true);\r\n                        GoodsType.current.value = e.target.value;\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n                {!goodsSelectType && (\r\n                  <Alert severity=\"error\">\r\n                    Please Select correct type of goods !\r\n                  </Alert>\r\n                )}\r\n                {/* for wieght */}\r\n                <Box sx={{ display: \"-webkit-flex\" }}>\r\n                  <TextField\r\n                    ref={Weight}\r\n                    id=\"outlined-number\"\r\n                    name=\"goodsWeight\"\r\n                    label=\"Weight\"\r\n                    type=\"number\"\r\n                    placeholder=\"1000Kg=1TON\"\r\n                    value={data.Weight}\r\n                    sx={{ width: { lg: 950, xs: 300 } }}\r\n                    onChange={(e) => {\r\n                      Weight.current.value = e.target.value;\r\n\r\n                      setGoodsWeight(true);\r\n\r\n                      // for weight validation\r\n                      if (\r\n                        (Weight.current.value !== 0 &&\r\n                          Weight.current.value === +Capacity) ||\r\n                        (Weight.current.value <= +Capacity &&\r\n                          Weight.current.value > 0)\r\n                      ) {\r\n                      } else if (Weight.current.value === 0) {\r\n                        setGoodsWeight(false);\r\n                      } else {\r\n                        setGoodsWeight(false);\r\n                      }\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    id=\"outlined-number\"\r\n                    label=\"TON\"\r\n                    type=\"text\"\r\n                    sx={{ width: 65 }}\r\n                    disabled\r\n                  />\r\n                </Box>\r\n                {!goodsWeight && (\r\n                  <Alert severity=\"error\">Please Enter proper Weight !</Alert>\r\n                )}\r\n                <div>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{ marginRight: 120, fontSize: 15 }}\r\n                  >\r\n                    EnterDistance\r\n                  </Typography>\r\n                </div>\r\n                <TextField\r\n                  ref={distance}\r\n                  id=\"outlined-basic\"\r\n                  label=\"Distance\"\r\n                  name=\"Distance\"\r\n                  variant=\"outlined\"\r\n                  value={data.distance}\r\n                  sx={{ width: { lg: 1000, xs: 350 } }}\r\n                  placeholder=\"Enter Distance in KM\"\r\n                  type=\"number\"\r\n                  onChange={(e) => {\r\n                    distance.current.value = e.target.value;\r\n\r\n                    setDistance(true);\r\n                    setInfo(true);\r\n\r\n                    setPrice(distance.current.value * Rate);\r\n                  }}\r\n                />\r\n                <Box>\r\n                  {info && (\r\n                    <Alert severity=\"info\">\r\n                      Claculate Distance from below distance calculator\r\n                    </Alert>\r\n                  )}\r\n                  {!Distance && (\r\n                    <Alert severity=\"error\">\r\n                      Please Enter Correct Distance !\r\n                    </Alert>\r\n                  )}\r\n                  <Box sx={{ width: { lg: 1000 } }}>\r\n                    <iframe\r\n                      className=\"iclass\"\r\n                      src=\"https://distancecalculator.globefeed.com/India_Distance_Calculator.asp\"\r\n                      title=\"distance calculator\"\r\n                      style={{ border: 0, paddingTop: 5 }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              </Stack>\r\n\r\n              <Stack\r\n                spacing={2}\r\n                direction=\"row\"\r\n                sx={{ marginLeft: { lg: 25 }, padding: 3 }}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  sx={{ width: { lg: 900, xs: 500 } }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Stack>\r\n            </Box>\r\n          </div>\r\n        </Box>\r\n        <BasicFooter />\r\n      </motion.div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BookTruck;\r\n"],"sourceRoot":""}