{"version":3,"sources":["component/AddProductModal.js","component/UpdateProductModal.js","pages/Products.js"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","AddProductModal","props","dispatch","useDispatch","useSelector","state","goods","addOpen","add","addMessage","isLoadingG","Alert","React","ref","elevation","variant","vertical","horizontal","setState","handleClose1","reason","goodsAction","clearMessage","open","type","setType","typeError","setTypeError","Modal","Open","onClose","setOpen","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","sx","LinearProgress","Typography","id","component","ml","Snackbar","anchorOrigin","autoHideDuration","severity","TextField","mt","name","label","value","onChange","e","target","Button","onClick","addGoods","UpdateProductModal","update","updateMessage","updateOpen","console","log","updateGoods","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","action","hover","Products","forwardRef","TransitionLeft","Slide","direction","useEffect","getGoods","goodsType","Delete","deleteOpen","deleteMessage","useState","modal","setModal","updateModal","setUpdateModal","setUpdateOpen","setId","Navbar","TransitionComponent","Paper","overflow","TableContainer","align","Table","minWidth","mb","TableHead","TableBody","map","index","scope","size","_id","className","deleteGoods","BasicFooter"],"mappings":"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","file":"static/js/11.19a35610.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { addGoods, goodsAction } from \"../store/goodsReducer\";\r\n\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { TextField } from \"@mui/material\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function AddProductModal(props) {\r\n  //   const [open, setOpen] = React.useState(false);\r\n\r\n  //   to close the modal\r\n  const handleClose = () => props.setOpen(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { addOpen, add, addMessage, isLoadingG } = useSelector(\r\n    (state) => state.goods\r\n  );\r\n\r\n  // for snackbar\r\n  const Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\n  // for transition purpose\r\n  const [state, setState] = React.useState({\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n  });\r\n  const { vertical, horizontal } = state;\r\n\r\n  const handleClose1 = (reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    dispatch(goodsAction.clearMessage());\r\n    setState({ ...state, open: false });\r\n  };\r\n\r\n  //   to get value\r\n  const [type, setType] = React.useState(\"\");\r\n\r\n  //   for validation\r\n  const [typeError, setTypeError] = React.useState(true);\r\n\r\n  //   to handle validation and dispatch\r\n  const handleSubmit = () => {\r\n    if (type === \"\") {\r\n      setTypeError(false);\r\n      return;\r\n    }\r\n    dispatch(addGoods({ type }));\r\n\r\n    setType(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button onClick={handleOpen}>Open modal</Button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        open={props.Open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={props.Open}>\r\n          <Box sx={style}>\r\n            {isLoadingG && (\r\n              <Box sx={{ width: \"100%\" }}>\r\n                <LinearProgress />\r\n              </Box>\r\n            )}\r\n            <Typography\r\n              id=\"transition-modal-title\"\r\n              variant=\"h6\"\r\n              component=\"h2\"\r\n              sx={{ ml: \"35%\" }}\r\n            >\r\n              Add Product\r\n            </Typography>\r\n            {add && (\r\n              <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={addOpen}\r\n                autoHideDuration={3000}\r\n                key={vertical + horizontal}\r\n                onClose={handleClose1}\r\n              >\r\n                <Alert\r\n                  onClose={handleClose1}\r\n                  severity=\"success\"\r\n                  sx={{ width: \"100%\" }}\r\n                >\r\n                  {addMessage}\r\n                </Alert>\r\n              </Snackbar>\r\n            )}\r\n            {!add && (\r\n              <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={addOpen}\r\n                autoHideDuration={3000}\r\n                key={vertical + horizontal}\r\n                onClose={handleClose1}\r\n              >\r\n                <Alert\r\n                  onClose={handleClose1}\r\n                  severity=\"error\"\r\n                  sx={{ width: \"100%\" }}\r\n                >\r\n                  {addMessage}\r\n                </Alert>\r\n              </Snackbar>\r\n            )}\r\n\r\n            <Box>\r\n              <TextField\r\n                sx={{ ml: 12, mt: 2 }}\r\n                id=\"type\"\r\n                name=\"type\"\r\n                label=\"Enter goods Type\"\r\n                value={type}\r\n                onChange={(e) => {\r\n                  setType(e.target.value);\r\n                  setTypeError(true);\r\n\r\n                  if (e.target.value === \"\") {\r\n                    setTypeError(false);\r\n                  }\r\n                }}\r\n              />\r\n              {!typeError && (\r\n                <Alert\r\n                  variant=\"outlined\"\r\n                  severity=\"error\"\r\n                  sx={{ width: \"55%\", ml: 10, mt: 2, p: -5 }}\r\n                >\r\n                  Please enter Type of Good\r\n                </Alert>\r\n              )}\r\n            </Box>\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{ mt: 2, ml: 13, width: \"49%\" }}\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { goodsAction } from \"../store/goodsReducer\";\r\n\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { TextField } from \"@mui/material\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { updateGoods } from \"../store/goodsReducer\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function UpdateProductModal(props) {\r\n  const handleClose = () => props.setOpen(false);\r\n\r\n  const Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\n  // for transition purpose\r\n  const [state, setState] = React.useState({\r\n    vertical: \"top\",\r\n    horizontal: \"center\",\r\n  });\r\n  const { vertical, horizontal } = state;\r\n\r\n  const dispatch = useDispatch();\r\n  const { update, updateMessage, updateOpen, isLoadingG } = useSelector(\r\n    (state) => state.goods\r\n  );\r\n\r\n  //   to close the alert\r\n  const handleClose1 = (reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    dispatch(goodsAction.clearMessage());\r\n    setState({ ...state, open: false });\r\n  };\r\n\r\n  //   for validation\r\n  const [typeError, setTypeError] = React.useState(true);\r\n\r\n  const handleSubmit = () => {\r\n    if (props.type === \"\") {\r\n      setTypeError(false);\r\n      return;\r\n    }\r\n    dispatch(updateGoods({ id: props.id, type: props.type }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        open={props.Open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={props.Open}>\r\n          <Box sx={style}>\r\n            {isLoadingG && (\r\n              <Box sx={{ width: \"100%\" }}>\r\n                <LinearProgress />\r\n              </Box>\r\n            )}\r\n            <Typography\r\n              id=\"transition-modal-title\"\r\n              variant=\"h6\"\r\n              component=\"h2\"\r\n              sx={{ ml: \"35%\" }}\r\n            >\r\n              Update Product\r\n            </Typography>\r\n            {update && (\r\n              <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={updateOpen}\r\n                autoHideDuration={3000}\r\n                key={vertical + horizontal}\r\n                onClose={handleClose1}\r\n              >\r\n                <Alert\r\n                  onClose={handleClose1}\r\n                  severity=\"success\"\r\n                  sx={{ width: \"100%\" }}\r\n                >\r\n                  {updateMessage}\r\n                </Alert>\r\n              </Snackbar>\r\n            )}\r\n            {update === false && (\r\n              <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={updateOpen}\r\n                autoHideDuration={3000}\r\n                key={vertical + horizontal}\r\n                onClose={handleClose1}\r\n              >\r\n                <Alert\r\n                  onClose={handleClose1}\r\n                  severity=\"error\"\r\n                  sx={{ width: \"100%\" }}\r\n                >\r\n                  {updateMessage}\r\n                </Alert>\r\n              </Snackbar>\r\n            )}\r\n            <Box>\r\n              <TextField\r\n                sx={{ ml: 12, mt: 2 }}\r\n                id=\"type\"\r\n                name=\"type\"\r\n                label=\"Enter goods Type\"\r\n                value={props.type}\r\n                onChange={(e) => {\r\n                  props.setType(e.target.value);\r\n                  console.log(props.type);\r\n                  setTypeError(true);\r\n\r\n                  if (e.target.value === \"\") {\r\n                    setTypeError(false);\r\n                  }\r\n                }}\r\n              />\r\n              {!typeError && (\r\n                <Alert\r\n                  variant=\"outlined\"\r\n                  severity=\"error\"\r\n                  sx={{ width: \"55%\", ml: 10, mt: 2, p: -5 }}\r\n                >\r\n                  Please enter Type of Good\r\n                </Alert>\r\n              )}\r\n            </Box>\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{ mt: 2, ml: 13, width: \"49%\" }}\r\n              onClick={handleSubmit}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getGoods, deleteGoods, goodsAction } from \"../store/goodsReducer\";\r\n\r\nimport Navbar from \"../component/Navbar\";\r\n\r\n// mui imports\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddProductModal from \"../component/AddProductModal\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n\r\nimport UpdateProductModal from \"../component/UpdateProductModal\";\r\nimport BasicFooter from \"../component/BasicFooter\";\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\n// for snackbar\r\nfunction Products() {\r\n  const Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getGoods());\r\n\r\n    // setTimeout(() => {\r\n    //   dispatch(goodsAction.clearMessage());\r\n    // }, 3000);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // for transition of the snackbar\r\n  function TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />;\r\n  }\r\n\r\n  const handleClose1 = (reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    dispatch(goodsAction.clearMessage());\r\n  };\r\n\r\n  const { goodsType, Delete, deleteOpen, deleteMessage } = useSelector(\r\n    (state) => state.goods\r\n  );\r\n\r\n  // state to open modal\r\n  const [modal, setModal] = React.useState(false);\r\n  const [Open, setOpen] = React.useState(false);\r\n\r\n  const [updateModal, setUpdateModal] = React.useState(false);\r\n  const [updateOpen, setUpdateOpen] = React.useState(false);\r\n\r\n  const [type, setType] = React.useState();\r\n  const [id, setId] = React.useState();\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {updateModal && (\r\n        <UpdateProductModal\r\n          Open={updateOpen}\r\n          setOpen={setUpdateOpen}\r\n          type={type}\r\n          setType={setType}\r\n          id={id}\r\n        />\r\n      )}\r\n      {modal && <AddProductModal Open={Open} setOpen={setOpen} />}\r\n\r\n      {/* to show alert */}\r\n      {Delete && (\r\n        <Snackbar\r\n          TransitionComponent={TransitionLeft}\r\n          open={deleteOpen}\r\n          autoHideDuration={3000}\r\n          onClose={handleClose1}\r\n        >\r\n          <Alert\r\n            onClose={handleClose1}\r\n            severity=\"success\"\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {deleteMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n      {Delete === false && (\r\n        <Snackbar\r\n          TransitionComponent={TransitionLeft}\r\n          open={deleteOpen}\r\n          autoHideDuration={3000}\r\n          onClose={handleClose1}\r\n        >\r\n          <Alert onClose={handleClose1} severity=\"error\" sx={{ width: \"100%\" }}>\r\n            {deleteMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n      <Paper sx={{ ml: \"25%\", width: \"50%\", overflow: \"hidden\" }}>\r\n        {goodsType == \"\" && <Typography>No data found</Typography>}\r\n        <TableContainer>\r\n          <Typography variant=\"h4\" align=\"center\" sx={{ p: 2 }}>\r\n            Products\r\n          </Typography>\r\n          <Table\r\n            sx={{ minWidth: 650, border: 1, width: 500, mb: 2 }}\r\n            align=\"center\"\r\n            aria-label=\"simple table\"\r\n          >\r\n            <TableHead sx={{ border: 1 }}>\r\n              <StyledTableRow sx={{ border: 1 }}>\r\n                <StyledTableCell align=\"center\" sx={{ border: 1 }}>\r\n                  No.\r\n                </StyledTableCell>\r\n\r\n                <StyledTableCell align=\"center\" sx={{ border: 1 }}>\r\n                  Type\r\n                </StyledTableCell>\r\n                <StyledTableCell\r\n                  align=\"center\"\r\n                  sx={{ border: 1 }}\r\n                ></StyledTableCell>\r\n                <StyledTableCell\r\n                  align=\"center\"\r\n                  sx={{ border: 1 }}\r\n                ></StyledTableCell>\r\n              </StyledTableRow>\r\n            </TableHead>\r\n            <TableBody sx={{ border: 1 }}>\r\n              {goodsType.map((goods, index) => (\r\n                <StyledTableRow\r\n                  key={index}\r\n                  sx={{\r\n                    \"&:last-child td, &:last-child th\": { border: 1 },\r\n                    border: 1,\r\n                  }}\r\n                >\r\n                  <StyledTableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    sx={{ border: 1 }}\r\n                    align=\"center\"\r\n                  >\r\n                    {index + 1}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell\r\n                    align=\"center\"\r\n                    sx={{ border: 1, size: \"small\" }}\r\n                  >\r\n                    {goods.type}\r\n                  </StyledTableCell>\r\n\r\n                  {/* update button */}\r\n                  <StyledTableCell align=\"center\" sx={{ border: 1 }}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        setUpdateModal(true);\r\n                        setUpdateOpen(true);\r\n\r\n                        console.log(goodsType[index].type);\r\n                        setType(goodsType[index].type);\r\n                        setId(goodsType[index]._id);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa-solid fa-pen-to-square\"></i>\r\n                    </Button>\r\n                  </StyledTableCell>\r\n\r\n                  {/* delete button */}\r\n                  <StyledTableCell align=\"center\" sx={{ border: 1 }}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        dispatch(deleteGoods(goods._id));\r\n                      }}\r\n                    >\r\n                      <i className=\"fa-solid fa-trash\"></i>\r\n                    </Button>\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <Button\r\n        variant=\"contained\"\r\n        sx={{ ml: 42, mt: 2, width: \"50%\" }}\r\n        onClick={() => {\r\n          setModal(true);\r\n          setOpen(true);\r\n        }}\r\n      >\r\n        Add Goods\r\n      </Button>\r\n      <BasicFooter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n"],"sourceRoot":""}